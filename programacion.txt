
> git init "En la carpeta que quiero que sea mi directorio principar pára monitorear los cambios "
> git config --global user.name "Felipe">>>>"Cambiamos la configuracion del usuario de git"
>git config --global user.email "ppsier@...">>>"Cambiamos la configuracion del usuario de git"

> git status "Nos monitorea nuestra carpeta (nos dice si hay archivos que no estemos monitoreando"
           ----Sale en rojo si no se está monitoreando aún 

> git add . "CLAVE!, con este añadimos un archivo y cada una de las versiones que vamos trabajando"
> git rm --cached "Name file" "Dejo de monitorear un archivo"
>>>>>>> con add no lo hemos mandado aún al repositorio>>>>
> git commit -m "un menaje "  >>>>>"Manda el archivo al repositorio con un mensaje (para saber de que se trata)
> git log (solo, me muestra las historia de cambios en toda mi carpeta)
> git log "file name" me muestra la historia de un archivo particular

########### HEAD -> master <<<< nos dice cual es el archivo actual!

> git show "file name ">>>>> nos muestra los cambios ejecutados sobre un archivos

> git diff "file code + viejo " "file code + nuevo"
> git reset "num file""Ojoooo nos devuelve completamente a una version anterior borrando todo"
           (Hay un --soft y un --hard el soft deja cosas en la memoria 
           Para el proximo commit)

> git checkout "codigo file" "file name" para que podamos ver como era el archivo antes 
               "master >>>> si queremos volver a la ultima version"

////////////////////////////Flujo de trabajo////////////////////////

> git clone url >>>> Con el link se traen los archivos el master y todos los cambios 
>> git push >>>> se envia todo al servidor remoto!!
> git fetch >>>> Si quiero traer una actualización 
> git merge >>>> nos permite trabajar en una rama aparte sin afectar el master
> git pull>>>>> obtengo la ultima verison de lo que pasó en el repositorio

>git commit -am >>>>> esto hace el git add de los cambios 

///////////////////ramas////////////////////////

> git branch "Nombre de la rama">>>> Creamos nuestra rama
> Para trabajar en la rama>>>> git checkout "nombre de la rama"
 ///////////////MERGE ////////
 Si vamos a hacer el merge de dos versiones es clave que estemos en la 
que es master sino en nuestra rama sino mandamos todo a la rama....
Osea quiero llevar la verison a master 

> git branch>>> nos permite ver las ramas que hemos creado hasta ahora 
> git merge "Nombre rama" -m"mensaje"
> git push origin master >>>>> enviamos la carpeta master al origen en github

/////////////////////////// GIT HUB ///////////////////
> git remote add >>>> lo usamos para crear un ORIGEN remoto  de nuestros archivos
>> git log --all --graph --decorate --oneline >>>> nos crea una visualización 
clara y completa de lo que estamos haciendo

>> gitk >>>> nos abre un doftware que muestra la historia de todo con 
las ramas 

